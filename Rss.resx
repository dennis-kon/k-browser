<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsRssGo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAIOSURBVDhP3ZLbS1RRFMbnb8hbVtBT9BLRaxFFSFghMiBj
        GYOJZUjamFEmRSQmmdG9Bk3Lyi5q0pQxaCaVo4aDiOWL9CakUCCCmtacy96/1jmnoqL3oA0f53AO67e+
        /a3l+w8OHev4u9bCwzXQshqaV8GNlRBeAZeXwQVRbTpUpeMB3p37XaNnYeQMDNdAvBreVEH/Seg7Ab2V
        8PwodJXDsaW/AAYOQSyEflWC7i1Gd+9DRQtQT4LYHTuxW3OwWrIxm3dgNm6FpwchlPYDUCcdymDxI5gL
        6OHzqCH59mUG5qew2wPo2Un5P40VPYJZnyFXLIaiVAG0yj0duzEhmovo/goXwtcZ1EANqq8aPRFDT7/H
        vOtHvW3DCG+RfPZCMEUATkjx0/C6FGwDPRqGxCz60xgoG+bEwYvjgEYviIPOcoxrmyTcPRBIFoCT7uAp
        9MsDLsC9wng7+sMg9qNc9NwkemoE89Y27HiTwOcxrmyUyQQhO0kAV5e76TrBOcVqqNZzMh6RZwKMz1jd
        krwl71JsRcowLm2Axl2w3QHUyUx7KtA9+1Fdhahn+diPd7vBWff9WHeyMG9mYjZkYFzf7HZPXFwP9QHI
        XCIAWQaiMtPOEERKvHTbiuCBhHSvAG7ne3ab8mSZpGtDrlf8EyDLwOE0KE11x0JhipsuecmQI/InQZZI
        7DoFf+r7Qv+z4/N9A4WKHng+DwhoAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAWKQsCU6JIAlCnagBQpG0CVKRwA1ilcQJc
        p3EAXahxAl6ocQNaqHAAVKhtAFKoagJTokgAFikLAAAAAgAAAAECX6sTA1KtygQ/nvwRU7D8Blm5/QRo
        wv0Ke8v9GIrR/QqDz/0Gdsn9Fm3E/A9auPwDWrfKAlumEwAAAAEAAAAAA3DKFAFLp9VDa6//ydbr/1SK
        zP8AXb3/SJPR/8bf8P8wkNP/FX3L/7rV7f91otf/AFy51QNpwhQAAAAAAAAAAANsxBQBU7HUQni9/8XZ
        7f9Rj87/AWC8/4q02//a5vD/Hn7K/y2Ey//t8vf/cqXY/wBgvNQDZr8UAAAAAAAAAAADacEUA1251ANX
        tf8NZLz/AWS+/0CLy//b4+v/irjd/wJsw/9no9X/7fL2/z6Mz/8AZsDUA2S+FAAAAAAAAAAAA2a/FANj
        vtQMaMD/Jn3I/2mj1f/U3uj/tc/j/x17yP8WdsX/w9bn/7jU6v8PdMb/AmrC1ANjvRQAAAAAAAAAAANk
        vhQAZsDUXZzU/+Hq8v/f6O7/lsLf/yCIzv8Id8f/iLXZ/+Xr8P9Nndb/AXTH/wRuxNQCYrwUAAAAAAAA
        AAADYr0UAmvD1DSMzv9krNr/MJjU/wSGz/8WjND/ibvd/+bq7f96uuD/B4HN/wR8yv8EccXUAmC8FAAA
        AAAAAAAAA2C8FANyxtQFgs7/Do/T/yed2P9mtt//w9vq/+Lq7v92wOL/DZLT/wSHz/8Egc3/BHLG1AJg
        vBQAAAAAAAAAAAJauRQBfMrUV7Lf/8/o9f/j7/b/5+/0/67e7f9FvuP/B6fc/wSe2f8FldX/BIvR/wR2
        yNQCXrsUAAAAAAAAAAACVLcTAofP0kW54f+Q1uz/bNDq/zjH5/8NwOb/A73l/wW24/8FrN7/BaHa/wWV
        1f8EesrSAly6EwAAAAAAAAAAAk2zBQSFz3cEn9nDAqbcxACs38QBsOHEBbDhxAWt38QFp93EBZ/ZxAWW
        1sQFjNHDBHrKdwNXuAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAP//AADAAwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAMAAMADAADAAwAA4AcAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        +f/6+fj/+ff2/9rn7/96xuP/Gavc/wOl3P8Gotv/BZ7Z/wWa1/8FldX/BJDT/wSM0f8Eh8//BHzL/wNp
        wcYBWrcMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVm2DANqwsYEkdX/EqXZ/83i8f//////////////
        /v///fz/9vb4/9Hk7/+EyeT/Lbff/wW04f8EtOL/BbDg/wWs3/8Fp93/BaLb/wWd2P8FmNb/BJLU/wSO
        0v8Ef8z/A2nBxgFatwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABWLYMA2rCxgSX1/8RqNv/u9br/+jv
        9//Z6PP/vdvt/4/M5v9UveD/Hrfg/wO64/8Dv+b/Br7l/wa75P8Ft+L/BbLh/wWt3v8Fp9z/BaLa/wWc
        2P8Fl9b/BJLU/wSCzv8DacHGAVm3DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFXtQoDasLBBZnY/wex
        4P8pqtn/LLHc/x613v8OueH/BMDl/wLG6f8EyOr/Bsfp/wXG6f8Gxun/BsLn/wa95f8GueT/BbPh/wWt
        3/8Fp93/BaLa/wWc2P8Eltb/BITP/wNpwcEBWLYKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE+wAQNr
        w2UEitLtBane/gOu4f4DsuL+BLbk/gW55f4Gu+X+Brzl/ga85f4Gu+X+Brrl/ga55P4FtuP+BbLh/gWu
        4P4Fqd7+BaTc/gWf2v4Fmtj+BZXV/gSO0/4EfcztA2vDZQBRsQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABW7EBQR0x0sEe8tyBH7McwR/zXMEgM1zBILOcwSCznMEg85zBIPOcwSDz3MEg85zBILOcwSB
        znMEgM1zBH/McwR+zHMEfMtzBHvKcwR5ynMEeMlzBHbIcgRyxksFcMUFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////+AAAH/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/gAAB//////////////////////
</value>
  </data>
</root>